{
  "name": "Seiva Ai Agent copy (Wallet checker)",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        140,
        140
      ],
      "id": "e721dab5-a6f7-43b2-bad8-3e5db3be20b0",
      "name": "Telegram Trigger",
      "webhookId": "9de3f4c4-6029-494c-bd0b-ea7e329d10a4",
      "credentials": {
        "telegramApi": {
          "id": "CYHzP0aIKSZbQucu",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.text }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1520,
        100
      ],
      "id": "7ff8d973-19cd-4f1a-9866-64bf7d79a913",
      "name": "Send a text message",
      "webhookId": "6c048fda-33a8-4bc2-8cc7-c8d5a6af68f2",
      "credentials": {
        "telegramApi": {
          "id": "CYHzP0aIKSZbQucu",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{$json.type}}",
                    "rightValue": "wallet",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "57c9acb4-ad5a-4898-ab1b-ad682d1e7d5f"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c68b8809-ed4d-4a22-a9a8-8d9d33fb8061",
                    "leftValue": "={{$json.type}}",
                    "rightValue": "ask",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "03492a6b-ce4e-4ed8-99be-29d710dda702",
                    "leftValue": "={{$json.type}}",
                    "rightValue": "help",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e14bde5a-6a63-41e2-bc0d-8ecb11240cbb",
                    "leftValue": "={{$json.type}}",
                    "rightValue": "token",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        560,
        120
      ],
      "id": "e7db42c8-3e42-4dab-88cb-c92751f1c4a6",
      "name": "Switch"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://sei-evm-rpc.publicnode.com",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"method\": \"eth_getBalance\",\n  \"params\": [\n    \"{{$json.address}}\",\n    \"latest\"\n  ]\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        940,
        100
      ],
      "id": "7963c56e-14a9-4b2f-b490-7e612d4927a1",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "jsCode": "const weiHex = $json.result || \"0x0\";\nconst wei = BigInt(weiHex);\nconst sei = Number(wei) / 1e18;\n\n// manual price\nconst SEI_USD = 0.32;\nconst usd = sei * SEI_USD;\n\n// helper\nfunction fmt(n) {\n  return n.toLocaleString(\"en-US\", { maximumFractionDigits: 4 });\n}\n\n// address & chat_id langsung dari input\nconst address = $json.address || \"\";     // ‚Üê datang dari node sebelum ini\nconst chatId  = $json.chat_id;\n\nlet text;\n\nif (sei === 0) {\n  text =\n    \"üòÖ *Zero balance detected*\\n\" +\n    \"Your wallet currently holds *0¬†SEI*.\\n\" +\n    \"Top up via a bridge or faucet before interacting with dApps.\";\n} else {\n  const scanUrl = `https://seistream.app/account/${address}`;\n  text =\n    `üí∞ *SEI Balance Overview*\\n` +\n    `‚Ä¢ SEI : *${fmt(sei)}*\\n` +\n    `‚Ä¢ ‚âà USD: *$${fmt(usd)}*\\n\\n` +\n    `üîó [View on SeiTrace](${scanUrl})`;\n}\n\nreturn [\n  {\n    json: {\n      text,\n      chat_id: chatId,\n      parse_mode: \"Markdown\",\n    },\n  },\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1260,
        100
      ],
      "id": "9fef6c86-507e-43bd-a7b2-a9ce0b5b3550",
      "name": "Format Wallet Balance"
    },
    {
      "parameters": {
        "jsCode": "const text = ($json.message?.text || \"\").trim().toLowerCase();\nconst rexTokenCmd = /^token\\s+(0x[a-fA-F0-9]{40})$/;\nconst rexWallet    = /^0x[a-fA-F0-9]{40}$/;\n\nlet type    = \"ask\";\nlet address = null;\n\n// Jika pengguna kirim 'token 0x....'\nif (rexTokenCmd.test(text)) {\n  type    = \"token\";\n  address = text.match(rexTokenCmd)[1];\n}\n// Jika hanya address EVM biasa tanpa 'token'\nelse if (rexWallet.test(text)) {\n  type    = \"wallet\";\n  address = text;\n}\n// Jika /help\nelse if ([\"/help\", \"help\"].includes(text)) {\n  type = \"help\";\n}\n\nelse if ([\"/start\", \"help\"].includes(text)) {\n  type = \"help\";\n}\n\nreturn [{\n  json: {\n    type,\n    address,\n    chat_id: $json.message.chat.id,\n    query: type === \"ask\" ? text : null\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        340,
        140
      ],
      "id": "8f6bc94a-b52f-4392-87ec-cf9fabdfba90",
      "name": "Classify"
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Classify",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [],
        []
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Format Wallet Balance",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Wallet Balance": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Classify": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1dccbe2a-4223-40f7-8911-c1cd7a3434c6",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "30f9e2bc0c2d215c362a29b88c6a83cfde3883f4f3b9df9537abde7bc19781a9"
  },
  "id": "2vHIdUWxoUSn92JC",
  "tags": []
}